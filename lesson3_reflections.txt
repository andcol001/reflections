When would you want to use a remote repository rather than keeping all your work local?

As a backup of a local repository so that I can pull the remote to a different local machine to work or to collaborate with other team members so that we can push and pull our branches that we are working on independently.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

One can control at what point you want to pull / push changes according to when work is "finished". "Finished
 might be in the context of completting something that another team members needs for what he is working on or for a release version of your software for example. In automtic mode, one would not be able to control these logical synch points.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are when you want to clone a repository on the remote server, such as GitHub. Clones are when you want to clone a repsoitory on a remote server to your local machine. Branches are when you want to branch off an existing chain on your local machine.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Shared file system. The shared files system approach would be much harder and changes would not be tracked and so conflicts could arise. The only way around this is to lock out files when someone is editing them, but that means multiple people could not work simultaneously on the project!

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When I am adding a new feature and do not want to break master which is the production. However, if fixing bugs or documentation, then it is better to work directly in master.


